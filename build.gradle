
buildscript {

    // testing, code-style, CI-tools
    ext.detect_code_analysis = '1.0.0.RC6-3' //change to 1.0.0 when available

    repositories {
        google()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.41"
        classpath "gradle.plugin.io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detect_code_analysis"
    }
}
plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.21'
}
apply plugin: "io.gitlab.arturbosch.detekt"
apply plugin: "kotlin"

allprojects {
    repositories {
        google()
        jcenter()
    }
}

group 'coen.nobilex'
version '1.0-SNAPSHOT'

configurations {
    ktlint
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
//    runtime group: 'io.gitlab.arturbosch.detekt', name: 'detekt-core', version: '1.0.0-RC16'
//
//    // https://mvnrepository.com/artifact/io.gitlab.arturbosch.detekt/detekt-cli
//    runtime group: 'io.gitlab.arturbosch.detekt', name: 'detekt-cli', version: '1.0.0-RC16'
//
//    // https://mvnrepository.com/artifact/io.gitlab.arturbosch.detekt/detekt-api
//    runtime group: 'io.gitlab.arturbosch.detekt', name: 'detekt-api', version: '1.0.0-RC16'
//
//// https://mvnrepository.com/artifact/io.gitlab.arturbosch.detekt/detekt-rules
//    runtime group: 'io.gitlab.arturbosch.detekt', name: 'detekt-rules', version: '1.0.0-RC16'


    compileOnly "io.gitlab.arturbosch.detekt:detekt-api:1.0.0-RC16"
    testCompile "io.gitlab.arturbosch.detekt:detekt-test:1.0.0-RC16"

    testCompile "junit:junit:4.12"
    testCompile "org.assertj:assertj-core:3.10.0"


    ktlint "com.pinterest:ktlint:0.34.2"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
//    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:1.0.0-RC16"
}

//detekt {
//    toolVersion = "1.0.0-RC16"
//    input = files("src/main/kotlin")
//    filters = ".*/resources/.*,.*/build/.*"
//    baseline = file("my-detekt-baseline.xml") // Just if you want to create a baseline file.
//}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/pinterest/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}
